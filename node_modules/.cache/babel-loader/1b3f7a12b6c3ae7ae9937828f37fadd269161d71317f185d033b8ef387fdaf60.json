{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"tabla-personas\"\n};\nconst _hoisted_2 = {\n  class: \"table\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nombre\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Apellido\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [_createCommentVNode(\"\\r\\n            el atributo v-for permite recorrer los datos de una propiedad, que en nuestro caso es la propiedad personas\\r\\n            \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.personas, persona => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: persona.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(persona.nombre), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(persona.apellido), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(persona.email), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_Fragment","_renderList","$props","personas","persona","key","_toDisplayString","nombre","apellido","email"],"sources":["C:\\Users\\glo\\Documents\\UROLOGIA\\00-LAB\\vue\\aprendizaje\\src\\components\\TablaPersonas.vue"],"sourcesContent":["<template>\r\n    <div id=\"tabla-personas\">\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Apellido</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <!--\r\n            el atributo v-for permite recorrer los datos de una propiedad, que en nuestro caso es la propiedad personas\r\n            -->\r\n            <tr v-for=\"persona in personas\" :key=\"persona.id\">\r\n                <td>{{ persona.nombre}}</td>\r\n                <td>{{ persona.apellido }}</td>\r\n                <td>{{ persona.email}}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n    /*\r\n    El objeto props debe contener todas aquellas propiedades que va a recibir el componente, \r\n    conteniendo pares que contienen el nombre de la propiedad y el tipo de las misma. \r\n    En este caso, la propiedad personas es un Array\r\n    */\r\n    export default {\r\n      name: 'tabla-personas',\r\n      props: {\r\n            personas: Array,\r\n        },\r\n    }\r\n  </script>\r\n  <style scoped></style>"],"mappings":";;EACSA,EAAE,EAAC;AAAgB;;EACfC,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAc,YAAV,OAAK,E;;uBANjBC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJF,mBAAA,CAkBQ,SAlBRG,UAkBQ,GAjBNC,UAMQ,EACRJ,mBAAA,CASQ,gBARJK,mBAAA,+IAEG,G,kBACHJ,mBAAA,CAIKK,SAAA,QAlBjBC,WAAA,CAckCC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBT,mBAAA,CAIK;MAJ4BU,GAAG,EAAED,OAAO,CAACZ;QAC1CE,mBAAA,CAA4B,YAAAY,gBAAA,CAArBF,OAAO,CAACG,MAAM,kBACrBb,mBAAA,CAA+B,YAAAY,gBAAA,CAAxBF,OAAO,CAACI,QAAQ,kBACvBd,mBAAA,CAA2B,YAAAY,gBAAA,CAApBF,OAAO,CAACK,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}